{"remainingRequest":"C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\src\\components\\HelloWorld.vue","mtime":1653853534555},{"path":"C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\babel.config.js","mtime":1636299843881},{"path":"C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matad\\Desktop\\Master\\WS\\Practica\\Ejer 5\\pract5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-container fluid>\n    <!-- User Interface controls -->\n    <b-row>\n      <b-form-input\n        v-model=\"filter\"\n        type=\"search\"\n        placeholder=\"Type to filter data\"\n      ></b-form-input>\n\n      <!--Selector de cantidad de elementos por página\n        <b-col sm=\"5\" md=\"6\" class=\"my-1\">\n        <b-form-group\n          label=\"Elements per page\"\n          label-for=\"per-page-select\"\n          label-cols-sm=\"6\"\n          label-cols-md=\"4\"\n          label-cols-lg=\"3\"\n          label-align-sm=\"right\"\n          label-size=\"sm\"\n          class=\"mb-0\"\n        >\n          <b-form-select\n            id=\"per-page-select\"\n            v-model=\"perPage\"\n            :options=\"pageOptions\"\n            size=\"sm\"\n          ></b-form-select>\n        </b-form-group>\n      </b-col>-->\n      <b-row>\n        <b-col>\n          <b-form-group\n            label=\"Property\"\n            label-for=\"per-page-select\"\n            label-cols-sm=\"6\"\n            label-cols-md=\"4\"\n            label-cols-lg=\"3\"\n            label-align-sm=\"right\"\n            label-size=\"sm\"\n            class=\"mb-0\"\n          >\n            <select v-model=\"firstOption\">\n              <option v-for=\"(item, index) in list\" :key=\"index\">\n                {{ index }}\n              </option>\n            </select>\n          </b-form-group>\n        </b-col>\n        <b-col>\n          <b-form-group\n            label=\"Value of property\"\n            label-for=\"per-page-select\"\n            label-cols-sm=\"6\"\n            label-cols-md=\"4\"\n            label-cols-lg=\"3\"\n            label-align-sm=\"right\"\n            label-size=\"sm\"\n            class=\"mb-0\"\n          >\n            <select v-model=\"secondOption\" v-if=\"firstOption\">\n              <option\n                v-for=\"option in list[firstOption]\"\n                :value=\"option.ent\"\n                :key=\"option\"\n              >\n                {{ option.name }}\n              </option>\n            </select>\n          </b-form-group>\n        </b-col>\n        <b-col>\n          <button v-on:click=\"search\">Search</button>\n        </b-col>\n      </b-row>\n    </b-row>\n\n    <!-- Main table element -->\n    <b-table\n      ref=\"table\"\n      :items=\"items\"\n      :fields=\"fields\"\n      :current-page=\"currentPage\"\n      :per-page=\"perPage\"\n      :filter=\"filter\"\n      :filter-included-fields=\"filterOn\"\n      :sort-by.sync=\"sortBy\"\n      :sort-desc.sync=\"sortDesc\"\n      :sort-direction=\"sortDirection\"\n      stacked=\"md\"\n      show-empty\n      small\n      striped\n      responsive\n      @filtered=\"onFiltered\"\n    >\n      <template #cell(name)=\"row\">\n        {{ row.value.first }} {{ row.value.last }}\n      </template>\n\n      <template #cell(actions)=\"row\">\n        <b-button size=\"sm\" @click=\"row.toggleDetails\">\n          {{ row.detailsShowing ? \"Hide\" : \"Show\" }} Details\n        </b-button>\n      </template>\n\n      <template #row-details=\"row\">\n        <b-card>\n          <h1>{{ row.item.nem }}</h1>\n          <p>Descripción: {{ row.item.description }}</p>\n          <p>Escala: {{ row.item.scale }}</p>\n          <p>Longitud: {{ row.item.length }} millas</p>\n          <p>Anchura: {{ row.item.width }} yardas</p>\n          <p>Fecha de inicio: {{ row.item.begDate }}</p>\n          <p>Fecha de fin: {{ row.item.endDate }}</p>\n          <p>Localización: {{ row.item.county }}</p>\n          <p>\n            Coordenadas iniciales: {{ row.item.begCoor.latitude }}/{{\n              row.item.begCoor.longitude\n            }}\n          </p>\n          <p>\n            Coordenadas finales: {{ row.item.endCoor.latitude }}/{{\n              row.item.endCoor.longitude\n            }}\n          </p>\n          <div>\n            <h3>Daños materiales:</h3>\n            <p>Daños a la cosecha: {{ row.item.crop }} $</p>\n            <p>Daños a la propiedad: {{ row.item.property }} $</p>\n          </div>\n          <div>\n            <h3>Daños personales:</h3>\n            <p>Muertes: {{ row.item.deaths }}</p>\n            <p>Heridos: {{ row.item.injuries }}</p>\n          </div>\n          <p>Fuente: {{ row.item.source }}</p>\n          <div>\n            <h3>Eventos relacionados:</h3>\n            <p>Tornados: {{ row.item.tornados }}</p>\n            <p>Inundaciones repentinas: {{ row.item.flashFloods }}</p>\n            <p>Inundaciones: {{ row.item.floods }}</p>\n            <p>Vientos tormentosos: {{ row.item.thunderstormWinds }}</p>\n            <p>Granizos: {{ row.item.hail }}</p>\n            <p>Rayos: {{ row.item.lightnings }}</p>\n            <p>Nubes embudo: {{ row.item.funnelClouds }}</p>\n          </div>\n          <div style=\"width: 100%\">\n            <img\n              width=\"600\"\n              height=\"400\"\n              :src=\"row.item.src\"\n              :alt=\"row.item.nem\"\n            />\n          </div>\n        </b-card>\n      </template>\n    </b-table>\n\n    <b-pagination\n      v-model=\"currentPage\"\n      :total-rows=\"totalRows\"\n      :per-page=\"perPage\"\n    ></b-pagination>\n  </b-container>\n</template>\n\n<script>\nvar tornados = [];\nexport default {\n  data() {\n    return {\n      items: [],\n      fields: [\n        {\n          key: \"nem\",\n          label: \"name\",\n          sortable: true,\n          sortDirection: \"desc\",\n        },\n        {\n          key: \"scale\",\n          label: \"scale\",\n          sortable: true,\n          class: \"text-center\",\n        },\n        { key: \"actions\", label: \"Actions\" },\n      ],\n      totalRows: 1,\n      currentPage: 1,\n      perPage: 10,\n      pageOptions: [\n        5,\n        10,\n        25,\n        50,\n        100,\n        { value: Number.MAX_SAFE_INTEGER, text: \"show all\" },\n      ],\n      sortBy: \"\",\n      sortDesc: false,\n      sortDirection: \"asc\",\n      filter: null,\n      filterOn: [\"nem\", \"scale\"],\n      firstOption: null,\n      secondOption: null,\n      list: {\n        Scale: [\n          { name: \"EF0\", ent: \"Q3\" },\n          { name: \"EF1\", ent: \"Q4\" },\n          { name: \"EF2\", ent: \"Q5\" },\n          { name: \"EF3\", ent: \"Q6\" },\n          { name: \"EF4\", ent: \"Q7\" },\n          { name: \"EF5\", ent: \"Q8\" },\n        ],\n        State: [\n          { name: \"Kansas\", ent: \"Q27\" },\n          { name: \"Iowa\", ent: \"Q12\" },\n          { name: \"Texas\", ent: \"Q38\" },\n          { name: \"Oklahoma\", ent: \"Q50\" },\n          { name: \"Georgia\", ent: \"Q32\" },\n        ],\n        County: [\n          { name: \"Stanton county\", ent: \"Q43\" },\n          { name: \"Butler county\", ent: \"Q13\" },\n          { name: \"Linn county\", ent: \"Q28\" },\n          { name: \"Dallas county\", ent: \"Q37\" },\n          { name: \"Caddo county\", ent: \"Q51\" },\n          { name: \"Bibb county\", ent: \"Q31\" },\n        ],\n      },\n    };\n  },\n  mounted() {\n    const WBK = require(\"wikibase-sdk\");\n    const wbk = WBK({\n      instance: \"http://156.35.98.107:8080\",\n      sparqlEndpoint: \"http://156.35.98.107:9999/bigdata/namespace/wdq/sparql\",\n    });\n    const url = wbk.getReverseClaims(\"P9\", [\n      \"Q3\",\n      \"Q4\",\n      \"Q5\",\n      \"Q6\",\n      \"Q7\",\n      \"Q8\",\n    ]);\n    this.search(url);\n  },\n  methods: {\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    },\n    getProp(entity) {\n      const WBK = require(\"wikibase-sdk\");\n      const wbk = WBK({\n        instance: \"http://156.35.98.107:8080\",\n        sparqlEndpoint:\n          \"http://156.35.98.107:9999/bigdata/namespace/wdq/sparql\",\n      });\n      var axios = require(\"axios\");\n      var config = {\n        headers: {\n          \"Content-type\": \"application/json; charset=utf-8\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"*\",\n          \"Access-Control-Allow-Headers\": \"*\",\n          \"cache-control\": \"no-cache\",\n        },\n      };\n      var tornado = {};\n      tornado[\"label\"] = entity.labels.en.value;\n      tornado[\"desc\"] = entity.descriptions.en.value;\n      //console.log(claim[0].mainsnak);\n      Object.values(entity.claims).forEach((claim) => {\n        if (claim[0].mainsnak.datavalue.type == \"wikibase-entityid\") {\n          const url = wbk.getEntities(claim[0].mainsnak.datavalue.value.id);\n          axios.get(url, config).then((response) => {\n            const entities =\n              response.data.entities[claim[0].mainsnak.datavalue.value.id];\n            //console.log(entities);\n            if (Object.keys(entities.claims).length == 0) {\n              tornado[claim[0].mainsnak.property] = entities.labels.en;\n            } else {\n              Object.values(entities.claims).forEach((claim) => {\n                if (claim[0].mainsnak.datavalue.type == \"wikibase-entityid\") {\n                  const url = wbk.getEntities(\n                    claim[0].mainsnak.datavalue.value.id\n                  );\n                  axios.get(url, config).then((response) => {\n                    const entities =\n                      response.data.entities[\n                        claim[0].mainsnak.datavalue.value.id\n                      ];\n                    //console.log(entities);\n                    if (Object.keys(entities.claims).length == 0) {\n                      tornado[claim[0].mainsnak.property] = entities.labels.en;\n                    } else {\n                      Object.values(entities.claims).forEach((claim) => {\n                        if (\n                          claim[0].mainsnak.datavalue.type ==\n                          \"wikibase-entityid\"\n                        ) {\n                          const url = wbk.getEntities(\n                            claim[0].mainsnak.datavalue.value.id\n                          );\n                          axios.get(url, config).then((response) => {\n                            const entities =\n                              response.data.entities[\n                                claim[0].mainsnak.datavalue.value.id\n                              ];\n                            //console.log(entities);\n                            if (Object.keys(entities.claims).length == 0) {\n                              tornado[claim[0].mainsnak.property] =\n                                entities.labels.en;\n                            } else {\n                              Object.values(entities.claims).forEach(() => {});\n                            }\n                          });\n                        } else {\n                          tornado[claim[0].mainsnak.property] =\n                            claim[0].mainsnak.datavalue;\n                        }\n                      });\n                    }\n                  });\n                } else {\n                  tornado[claim[0].mainsnak.property] =\n                    claim[0].mainsnak.datavalue;\n                }\n              });\n            }\n          });\n        } else {\n          tornado[claim[0].mainsnak.property] = claim[0].mainsnak.datavalue;\n        }\n      });\n      return tornado;\n    },\n    search(url = null) {\n      if (\n        (this.firstOption != null && this.secondOption != null) ||\n        url != null\n      ) {\n        const WBK = require(\"wikibase-sdk\");\n        const wbk = WBK({\n          instance: \"http://156.35.98.107:8080\",\n          sparqlEndpoint:\n            \"http://156.35.98.107:9999/bigdata/namespace/wdq/sparql\",\n        });\n        var axios = require(\"axios\");\n        var config = {\n          headers: {\n            \"Content-type\": \"application/json; charset=utf-8\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"*\",\n            \"Access-Control-Allow-Headers\": \"*\",\n            \"cache-control\": \"no-cache\",\n          },\n        };\n        if (typeof url == \"object\") {\n          const propPs = { Scale: \"P9\", State: \"P12\", County: \"P13\" };\n          url = wbk.getReverseClaims(\n            propPs[this.firstOption],\n            this.secondOption\n          );\n        }\n        tornados = [];\n        axios.get(url, config).then((response) => {\n          const entitiesIds = wbk.simplify.sparqlResults(response.data);\n          var ids = [];\n          JSON.parse(\n            JSON.stringify(entitiesIds).replaceAll(\"subject\", \"entityId\")\n          ).forEach((entity) => {\n            ids.push(entity.entityId);\n          });\n          if (this.firstOption == \"State\" || this.firstOption == \"County\") {\n            const url3 = wbk.getReverseClaims(\"P5\", ids);\n            axios.get(url3, config).then((response) => {\n              const entitiesIds = wbk.simplify.sparqlResults(response.data);\n              var ids = [];\n              JSON.parse(\n                JSON.stringify(entitiesIds).replaceAll(\"subject\", \"entityId\")\n              ).forEach((entity) => {\n                ids.push(entity.entityId);\n              });\n              const url2 = wbk.getEntities(ids);\n              axios.get(url2, config).then((response2) => {\n                ids.forEach((id) => {\n                  tornados.push(this.getProp(response2.data.entities[id]));\n                });\n                console.log(tornados);\n                this.delay(5000).then(() => this.pretty());\n              });\n            });\n          } else {\n            const url2 = wbk.getEntities(ids);\n            axios.get(url2, config).then((response2) => {\n              ids.forEach((id) => {\n                tornados.push(this.getProp(response2.data.entities[id]));\n              });\n              console.log(tornados);\n              this.delay(5000).then(() => this.pretty());\n            });\n          }\n        });\n      }\n    },\n    pretty() {\n      var equiv = {\n        P1: \"width\",\n        P2: \"length\",\n        P3: \"begDate\",\n        P4: \"endDate\",\n        P9: \"scale\",\n        P10: \"county\",\n        P11: \"wikibase\",\n        P14: \"deaths\",\n        P15: \"injuries\",\n        P16: \"tornados\",\n        P17: \"flashFloods\",\n        P18: \"floods\",\n        P19: \"thunderstormWinds\",\n        P20: \"hail\",\n        P21: \"lightnings\",\n        P22: \"funnelClouds\",\n        P23: \"crop\",\n        P24: \"property\",\n        P26: \"source\",\n        P27: \"begCoor\",\n        P28: \"endCoor\",\n      };\n      this.items.splice(0, this.items.length);\n      tornados.forEach((tornado) => {\n        const newRow = this.fields.reduce(\n          (a, c) => ({ ...a, [c.key]: null }),\n          {}\n        );\n        for (const [key, value] of Object.entries(equiv)) {\n          newRow[value] = tornado[key].value;\n          if (newRow[value].amount != undefined)\n            newRow[value] = newRow[value].amount.replace(\"+\", \"\");\n        }\n        newRow.nem = tornado[\"label\"];\n        newRow.description = tornado[\"desc\"];\n        newRow.src =\n          \"https://maps.geoapify.com/v1/staticmap?style=osm-carto&width=600&height=400&center=lonlat:\" +\n          newRow.begCoor.longitude +\n          \",\" +\n          newRow.begCoor.latitude +\n          \"&zoom=10&marker=lonlat:\" +\n          newRow.begCoor.longitude +\n          \",\" +\n          newRow.begCoor.latitude +\n          \";color:%23ff0000;size:medium;text:Beg|lonlat:\" +\n          newRow.endCoor.longitude +\n          \",\" +\n          newRow.endCoor.latitude +\n          \";color:%23ff0000;size:medium;text:End&apiKey=6cc19be3dddf4768ba8f0eaaf4de4dd6\";\n\n        this.items.unshift(newRow);\n      });\n    },\n    delay(time) {\n      return new Promise((resolve) => setTimeout(resolve, time));\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.pagination {\n  display: flex;\n  justify-content: center;\n}\n</style>\n"],"sourceRoot":"src/components"}]}